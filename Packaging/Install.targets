<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="4.0" DefaultTargets="MakeInstallPackage">
    <Target Name="MakeInstallPackage" Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
        <!-- Read package version from the manifest -->
		<XmlPeek Query="/dotnetnuke/packages/package[1]/@version" XmlInputPath="..\R7.News\R7.News.dnn">
            <Output TaskParameter="Result" PropertyName="Version" />
        </XmlPeek>
		<!-- Declare binaries -->
        <ItemGroup>
            <InstallBinaryFiles Include="$(MainProjectOutputPath)\R7.News*.dll" />
            <InstallBinaryFiles Include="$(MainProjectOutputPath)\YamlDotNet.dll" />
        </ItemGroup>
        <!-- Declare manifest files -->
        <ItemGroup>
            <InstallManifestFiles Include="..\R7.News\*.dnn" />
            <InstallManifestFiles Include="..\R7.News\*.dnn6" />
            <InstallManifestFiles Include="..\R7.News\license.htm" />
            <InstallManifestFiles Include="..\R7.News\releaseNotes.htm" />
        </ItemGroup>
        <!-- Declare SqlDataProvider files -->
        <ItemGroup>
            <InstallSqlDataProviderFiles Include="..\R7.News\SqlDataProvider\*.SqlDataProvider" />
        </ItemGroup>
        <!-- Declare resource files -->
        <ItemGroup>
            <InstallResourceFiles Include="..\**\*.ascx" />
            <InstallResourceFiles Include="..\**\*.aspx" />
            <InstallResourceFiles Include="..\**\*.asmx" />
            <InstallResourceFiles Include="..\**\*.ashx" />
            <InstallResourceFiles Include="..\**\*.resx" />
            <InstallResourceFiles Include="..\**\*.css" />
            <InstallResourceFiles Include="..\**\*.html" />
            <InstallResourceFiles Include="..\**\*.htm" Exclude="..\R7.News\license.htm;..\R7.News\releaseNotes.htm" />
            <InstallResourceFiles Include="..\**\*.xml" />
            <InstallResourceFiles Include="..\**\*.xsl" />
            <InstallResourceFiles Include="..\**\*.xslt" />
            <InstallResourceFiles Include="..\**\*.yml" />
            <InstallResourceFiles Include="..\**\*.resx" />
            <InstallResourceFiles Include="..\**\*.js" />
            <InstallResourceFiles Include="..\**\*.jpg" />
            <InstallResourceFiles Include="..\**\*.png" />
            <InstallResourceFiles Include="..\**\*.gif" />
        </ItemGroup>
        <!-- Declare excluded files -->
        <ItemGroup>
            <InstallExcludeFiles Include="..\packages\**\*" />
            <InstallExcludeFiles Include="..\Packaging\**\*" />
            <InstallExcludeFiles Include="..\.git\**\*" />
            <InstallExcludeFiles Include="..\.svn\**\*" />
            <InstallExcludeFiles Include="..\*\bin\**\*" />
            <InstallExcludeFiles Include="..\*\obj\**\*" />
            <InstallExcludeFiles Include="..\*\_ReSharper*\**\*" />
        </ItemGroup>
        <!-- Apply excluded files filters -->
        <ItemGroup>
            <InstallResourceFilteredFiles Include="@(InstallResourceFiles)" Exclude="@(InstallExcludeFiles)" />
        </ItemGroup>
        <!-- Copy binaries -->
        <Copy SourceFiles="@(InstallBinaryFiles)" DestinationFolder="$(MSBuildProjectDirectory)\tmp\Package\bin" />
        <!-- Copy manifest files -->
        <Copy SourceFiles="@(InstallManifestFiles)" DestinationFolder="$(MSBuildProjectDirectory)\tmp\Package" />
        <!-- Copy SqlDataProvider files -->
        <Copy SourceFiles="@(InstallSqlDataProviderFiles)" DestinationFolder="$(MSBuildProjectDirectory)\tmp\Package\SqlDataProvider" />
        <!-- Copy filtered Resource files to tmp\Resources dir -->
        <Copy SourceFiles="@(InstallResourceFilteredFiles)" DestinationFolder="$(MSBuildProjectDirectory)\tmp\Resources\%(RecursiveDir)" />
        <!-- Declare files to zip -->
        <ItemGroup>
            <InstallResourceZipFiles Include="$(MSBuildProjectDirectory)\tmp\Resources\**\*.*" />
        </ItemGroup>
        <!-- Create Resources.zip -->
        <Zip Condition=" '$(OS)' != 'Unix' " Files="@(InstallResourceZipFiles)" WorkingDirectory="$(MSBuildProjectDirectory)\tmp\Resources" ZipFileName="Resources.$(PackageExtension)" />
        <Exec Condition=" '$(OS)' == 'Unix' " Command="zip -r -6 -UN=UTF8 &quot;$(MSBuildProjectDirectory)\Resources.$(PackageExtension)&quot; ." WorkingDirectory="$(MSBuildProjectDirectory)/tmp/Resources" />
        <!-- Move Resources.zip to tmp\Package dir -->
        <Copy SourceFiles="$(MSBuildProjectDirectory)\Resources.$(PackageExtension)" DestinationFolder="$(MSBuildProjectDirectory)\tmp\Package/" />
        <Delete Files="$(MSBuildProjectDirectory)\Resources.$(PackageExtension)" />
        <!-- Declare install package files -->
        <ItemGroup>
            <InstallPackageFiles Include="$(MSBuildProjectDirectory)\tmp\Package\**\*.*" />
        </ItemGroup>
        <!-- Create the install package -->
        <Zip Condition=" '$(OS)' != 'Unix' " Files="@(InstallPackageFiles)" WorkingDirectory="$(MSBuildProjectDirectory)\tmp\Package" ZipFileName="$(PackageName)-$(Version)-Install.$(PackageExtension)" />
        <Exec Condition=" '$(OS)' == 'Unix' " Command="zip -r -6 -UN=UTF8 &quot;$(MSBuildProjectDirectory)\$(PackageName)-$(Version)-Install.$(PackageExtension)&quot; ." WorkingDirectory="$(MSBuildProjectDirectory)/tmp/Package" />
        <!-- Copy the install package to the output directory -->
        <Copy SourceFiles="$(MSBuildProjectDirectory)\$(PackageName)-$(Version)-Install.$(PackageExtension)" DestinationFolder="$(PackageOutputPath)/" />
        <Delete Files="$(MSBuildProjectDirectory)\$(PackageName)-$(Version)-Install.$(PackageExtension)" />
        <!-- Cleanup -->
        <RemoveDir Directories="$(MSBuildProjectDirectory)\tmp\Resources" />
        <RemoveDir Directories="$(MSBuildProjectDirectory)\tmp\Package" />
        <RemoveDir Directories="$(MSBuildProjectDirectory)\tmp" />
    </Target>
</Project>
